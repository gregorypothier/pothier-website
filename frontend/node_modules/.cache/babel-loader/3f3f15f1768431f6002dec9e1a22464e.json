{"ast":null,"code":"var _jsxFileName = \"/home/bob/code/gpothier/frontend/src/components/Feeds/Feeds.jsx\";\nimport React, { Component } from \"react\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport { List, Header, Pagination } from \"semantic-ui-react\";\n\nclass Feeds extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      newsIndex: 0,\n      title_loaded: false,\n      content_loaded: false\n    };\n  }\n\n  favicon(icon) {\n    if (icon !== undefined && icon !== \"\") {\n      const temp = icon;\n\n      const images = require.context(\"../../assets/icons\", true);\n\n      const defImage = images(\"./\" + temp + \".ico\");\n      const image = React.createElement(\"img\", {\n        src: defImage,\n        alt: \"Current Conditions\",\n        style: {\n          width: \"22px\",\n          height: \"22px\",\n          marginRight: \"2px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      });\n      return image;\n    }\n  }\n\n  render() {\n    var data = this.props.data.news;\n    const title = Object.entries(data).map((item, key) => {\n      //console.log(this.props.name);\n      if (item[1].name === this.props.name) {\n        //this.setState({ title_loaded: true });\n        //console.log(item[1]);\n        return Object.entries(item[1].data).map((k, v) => {\n          console.log(k[1]);\n          console.log(k[1].data.length);\n          let newText = k[1].name.split(/(\\s+)/).map(j => React.createElement(\"div\", {\n            key: j,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42\n            },\n            __self: this\n          }, React.createElement(\"b\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 43\n            },\n            __self: this\n          }, j)));\n          return React.createElement(Tab, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            title: k[1].title,\n            style: {\n              display: \"flex\",\n              fontSize: \"11px\",\n              alignItems: \"center\",\n              lineHeight: \"1em\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48\n            },\n            __self: this\n          }, this.favicon(\"\".concat(k[1].ico)), React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58\n            },\n            __self: this\n          }, newText)));\n        });\n      }\n    });\n    const text = Object.entries(this.props.data.news).map((item, key) => {\n      if (item[1].name === this.props.name) {\n        this.setState({\n          content_loaded: true\n        });\n        return React.createElement(\"div\", {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(List, {\n          selection: true,\n          divided: true,\n          relaxed: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, Object.entries(item[1].data).map((k, v) => {\n          //console.log(typeof k[0]);\n          //console.log(typeof this.state.newsIndex);\n          if (Number(k[0]) === this.state.newsIndex) {\n            //console.log(k[1].name);\n            //https://stackoverflow.com/questions/39455224/is-it-possible-to-map-only-a-portion-of-an-array-array-map\n            return Object.entries(k[1].data).slice().map((a, b) => {\n              console.log(a[1]);\n              return React.createElement(List.Item, {\n                key: a[1].id,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 83\n                },\n                __self: this\n              }, React.createElement(\"a\", {\n                href: a[1].link,\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 84\n                },\n                __self: this\n              }, React.createElement(Header, {\n                size: \"small\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 89\n                },\n                __self: this\n              }, a[1].title), React.createElement(List.Content, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 90\n                },\n                __self: this\n              }, React.createElement(List.Description, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 91\n                },\n                __self: this\n              }, React.createElement(\"div\", {\n                style: {\n                  display: \"flex\",\n                  justifyContent: \"space-between\"\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 93\n                },\n                __self: this\n              }, React.createElement(\"div\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 94\n                },\n                __self: this\n              }, a[1].title.slice(0, 20), \"...\"), React.createElement(\"div\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 96\n                },\n                __self: this\n              }, a[1].time_stamp))))));\n            });\n          }\n        })));\n      }\n    });\n    let feeds = React.createElement(Tabs, {\n      selectedIndex: this.state.newsIndex,\n      onSelect: newsIndex => this.setState({\n        newsIndex\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(TabList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        padding: \"6px 12px\",\n        fontSize: \"16px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, this.props.name)), title)), text);\n    console.log(feeds);\n    return feeds;\n  }\n\n}\n\nexport default Feeds;","map":{"version":3,"sources":["/home/bob/code/gpothier/frontend/src/components/Feeds/Feeds.jsx"],"names":["React","Component","Tab","Tabs","TabList","TabPanel","List","Header","Pagination","Feeds","state","newsIndex","title_loaded","content_loaded","favicon","icon","undefined","temp","images","require","context","defImage","image","width","height","marginRight","render","data","props","news","title","Object","entries","map","item","key","name","k","v","console","log","length","newText","split","j","display","fontSize","alignItems","lineHeight","ico","text","setState","Number","slice","a","b","id","link","justifyContent","time_stamp","feeds","padding"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport { List, Header, Pagination } from \"semantic-ui-react\";\n\nclass Feeds extends React.Component {\n  state = {\n    newsIndex: 0,\n    title_loaded: false,\n    content_loaded: false,\n  };\n\n  favicon(icon) {\n    if (icon !== undefined && icon !== \"\") {\n      const temp = icon;\n      const images = require.context(\"../../assets/icons\", true);\n      const defImage = images(\"./\" + temp + \".ico\");\n      const image = (\n        <img\n          src={defImage}\n          alt={\"Current Conditions\"}\n          style={{ width: \"22px\", height: \"22px\", marginRight: \"2px\" }}\n        />\n      );\n      return image;\n    }\n  }\n\n  render() {\n\n    \n    var data = this.props.data.news;\n\n    const title = Object.entries(data).map((item, key) => {\n      //console.log(this.props.name);\n      if (item[1].name === this.props.name) {\n        //this.setState({ title_loaded: true });\n        //console.log(item[1]);\n        return Object.entries(item[1].data).map((k, v) => {\n          console.log(k[1]);\n          console.log(k[1].data.length);\n          let newText = k[1].name.split(/(\\s+)/).map(j => (\n            <div key={j}>\n              <b>{j}</b>\n            </div>\n          ));\n          return (\n            <Tab>\n              <div\n                title={k[1].title}\n                style={{\n                  display: \"flex\",\n                  fontSize: \"11px\",\n                  alignItems: \"center\",\n                  lineHeight: \"1em\"\n                }}\n              >\n                {this.favicon(`${k[1].ico}`)}\n                <div>{newText}</div>\n              </div>\n            </Tab>\n          );\n        });\n      }\n    });\n\n    const text = Object.entries(this.props.data.news).map((item, key) => {\n      if (item[1].name === this.props.name) {\n        this.setState({ content_loaded: true });\n        return (\n          <div key={key}>\n            <List selection divided relaxed>\n              {Object.entries(item[1].data).map((k, v) => {\n                //console.log(typeof k[0]);\n                //console.log(typeof this.state.newsIndex);\n                if (Number(k[0]) === this.state.newsIndex) {\n                  //console.log(k[1].name);\n                  //https://stackoverflow.com/questions/39455224/is-it-possible-to-map-only-a-portion-of-an-array-array-map\n                  return Object.entries(k[1].data)\n                    .slice()\n                    .map((a, b) => {\n                      console.log(a[1]);\n                      return (\n                        <List.Item key={a[1].id}>\n                          <a\n                            href={a[1].link}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                          >\n                            <Header size=\"small\">{a[1].title}</Header>\n                            <List.Content>\n                              <List.Description>\n                                \n                                <div style={{display:\"flex\", justifyContent:\"space-between\"}}>\n                                <div>{a[1].title.slice(0, 20)}...\n                                </div>\n                                <div>\n                                {a[1].time_stamp}\n                                </div>\n                                </div>\n                              </List.Description>\n                            </List.Content>\n                          </a>\n                        </List.Item>\n                      );\n                    });\n                }\n              })}\n            </List>\n          </div>\n        );\n      }\n    });\n\n    \n    let feeds = (\n      <Tabs\n        selectedIndex={this.state.newsIndex}\n        onSelect={newsIndex => this.setState({ newsIndex })}\n      >\n        <TabList>\n          <div>\n            <b>\n              <span style={{ padding: \"6px 12px\", fontSize: \"16px\" }}>\n                {this.props.name}\n              </span>\n            </b>\n            {title}\n          </div>\n        </TabList>\n        {text}\n      </Tabs>\n    );\n\n    console.log(feeds);\n    return feeds;\n\n  }\n}\n\nexport default Feeds;\n"]},"metadata":{},"sourceType":"module"}