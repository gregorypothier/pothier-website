{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nimport PropTypes from 'prop-types';\nimport React, { cloneElement, Component } from 'react';\nimport cx from 'classnames';\nimport uuid from '../helpers/uuid';\nimport { childrenPropType } from '../helpers/propTypes';\nimport { getPanelsCount as _getPanelsCount, getTabsCount as _getTabsCount } from '../helpers/count';\nimport { deepMap } from '../helpers/childrenDeepMap';\nimport { isTabList, isTabPanel, isTab } from '../helpers/elementTypes';\n\nfunction isNode(node) {\n  return node && 'getAttribute' in node;\n} // Determine if a node from event.target is a Tab element\n\n\nfunction isTabNode(node) {\n  return isNode(node) && node.getAttribute('role') === 'tab';\n} // Determine if a tab node is disabled\n\n\nfunction isTabDisabled(node) {\n  return isNode(node) && node.getAttribute('aria-disabled') === 'true';\n}\n\nvar canUseActiveElement;\n\ntry {\n  canUseActiveElement = !!(typeof window !== 'undefined' && window.document && window.document.activeElement);\n} catch (e) {\n  // Work around for IE bug when accessing document.activeElement in an iframe\n  // Refer to the following resources:\n  // http://stackoverflow.com/a/10982960/369687\n  // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/12733599\n  canUseActiveElement = false;\n}\n\nvar UncontrolledTabs =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(UncontrolledTabs, _Component);\n\n  function UncontrolledTabs() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this.tabNodes = [];\n\n    _this.handleKeyDown = function (e) {\n      if (_this.isTabFromContainer(e.target)) {\n        var index = _this.props.selectedIndex;\n        var preventDefault = false;\n        var useSelectedIndex = false;\n\n        if (e.keyCode === 32 || e.keyCode === 13) {\n          preventDefault = true;\n          useSelectedIndex = false;\n\n          _this.handleClick(e);\n        }\n\n        if (e.keyCode === 37 || e.keyCode === 38) {\n          // Select next tab to the left\n          index = _this.getPrevTab(index);\n          preventDefault = true;\n          useSelectedIndex = true;\n        } else if (e.keyCode === 39 || e.keyCode === 40) {\n          // Select next tab to the right\n          index = _this.getNextTab(index);\n          preventDefault = true;\n          useSelectedIndex = true;\n        } else if (e.keyCode === 35) {\n          // Select last tab (End key)\n          index = _this.getLastTab();\n          preventDefault = true;\n          useSelectedIndex = true;\n        } else if (e.keyCode === 36) {\n          // Select first tab (Home key)\n          index = _this.getFirstTab();\n          preventDefault = true;\n          useSelectedIndex = true;\n        } // This prevents scrollbars from moving around\n\n\n        if (preventDefault) {\n          e.preventDefault();\n        } // Only use the selected index in the state if we're not using the tabbed index\n\n\n        if (useSelectedIndex) {\n          _this.setSelected(index, e);\n        }\n      }\n    };\n\n    _this.handleClick = function (e) {\n      var node = e.target; // eslint-disable-next-line no-cond-assign\n\n      do {\n        if (_this.isTabFromContainer(node)) {\n          if (isTabDisabled(node)) {\n            return;\n          }\n\n          var index = [].slice.call(node.parentNode.children).filter(isTabNode).indexOf(node);\n\n          _this.setSelected(index, e);\n\n          return;\n        }\n      } while ((node = node.parentNode) != null);\n    };\n\n    return _this;\n  }\n\n  var _proto = UncontrolledTabs.prototype;\n\n  _proto.setSelected = function setSelected(index, event) {\n    // Check index boundary\n    if (index < 0 || index >= this.getTabsCount()) return;\n    var _this$props = this.props,\n        onSelect = _this$props.onSelect,\n        selectedIndex = _this$props.selectedIndex; // Call change event handler\n\n    onSelect(index, selectedIndex, event);\n  };\n\n  _proto.getNextTab = function getNextTab(index) {\n    var count = this.getTabsCount(); // Look for non-disabled tab from index to the last tab on the right\n\n    for (var i = index + 1; i < count; i++) {\n      if (!isTabDisabled(this.getTab(i))) {\n        return i;\n      }\n    } // If no tab found, continue searching from first on left to index\n\n\n    for (var _i = 0; _i < index; _i++) {\n      if (!isTabDisabled(this.getTab(_i))) {\n        return _i;\n      }\n    } // No tabs are disabled, return index\n\n\n    return index;\n  };\n\n  _proto.getPrevTab = function getPrevTab(index) {\n    var i = index; // Look for non-disabled tab from index to first tab on the left\n\n    while (i--) {\n      if (!isTabDisabled(this.getTab(i))) {\n        return i;\n      }\n    } // If no tab found, continue searching from last tab on right to index\n\n\n    i = this.getTabsCount();\n\n    while (i-- > index) {\n      if (!isTabDisabled(this.getTab(i))) {\n        return i;\n      }\n    } // No tabs are disabled, return index\n\n\n    return index;\n  };\n\n  _proto.getFirstTab = function getFirstTab() {\n    var count = this.getTabsCount(); // Look for non disabled tab from the first tab\n\n    for (var i = 0; i < count; i++) {\n      if (!isTabDisabled(this.getTab(i))) {\n        return i;\n      }\n    }\n\n    return null;\n  };\n\n  _proto.getLastTab = function getLastTab() {\n    var i = this.getTabsCount(); // Look for non disabled tab from the last tab\n\n    while (i--) {\n      if (!isTabDisabled(this.getTab(i))) {\n        return i;\n      }\n    }\n\n    return null;\n  };\n\n  _proto.getTabsCount = function getTabsCount() {\n    var children = this.props.children;\n    return _getTabsCount(children);\n  };\n\n  _proto.getPanelsCount = function getPanelsCount() {\n    var children = this.props.children;\n    return _getPanelsCount(children);\n  };\n\n  _proto.getTab = function getTab(index) {\n    return this.tabNodes[\"tabs-\" + index];\n  };\n\n  _proto.getChildren = function getChildren() {\n    var _this2 = this;\n\n    var index = 0;\n    var _this$props2 = this.props,\n        children = _this$props2.children,\n        disabledTabClassName = _this$props2.disabledTabClassName,\n        focus = _this$props2.focus,\n        forceRenderTabPanel = _this$props2.forceRenderTabPanel,\n        selectedIndex = _this$props2.selectedIndex,\n        selectedTabClassName = _this$props2.selectedTabClassName,\n        selectedTabPanelClassName = _this$props2.selectedTabPanelClassName;\n    this.tabIds = this.tabIds || [];\n    this.panelIds = this.panelIds || [];\n    var diff = this.tabIds.length - this.getTabsCount(); // Add ids if new tabs have been added\n    // Don't bother removing ids, just keep them in case they are added again\n    // This is more efficient, and keeps the uuid counter under control\n\n    while (diff++ < 0) {\n      this.tabIds.push(uuid());\n      this.panelIds.push(uuid());\n    } // Map children to dynamically setup refs\n\n\n    return deepMap(children, function (child) {\n      var result = child; // Clone TabList and Tab components to have refs\n\n      if (isTabList(child)) {\n        var listIndex = 0; // Figure out if the current focus in the DOM is set on a Tab\n        // If it is we should keep the focus on the next selected tab\n\n        var wasTabFocused = false;\n\n        if (canUseActiveElement) {\n          wasTabFocused = React.Children.toArray(child.props.children).filter(isTab).some(function (tab, i) {\n            return document.activeElement === _this2.getTab(i);\n          });\n        }\n\n        result = cloneElement(child, {\n          children: deepMap(child.props.children, function (tab) {\n            var key = \"tabs-\" + listIndex;\n            var selected = selectedIndex === listIndex;\n            var props = {\n              tabRef: function tabRef(node) {\n                _this2.tabNodes[key] = node;\n              },\n              id: _this2.tabIds[listIndex],\n              panelId: _this2.panelIds[listIndex],\n              selected: selected,\n              focus: selected && (focus || wasTabFocused)\n            };\n            if (selectedTabClassName) props.selectedClassName = selectedTabClassName;\n            if (disabledTabClassName) props.disabledClassName = disabledTabClassName;\n            listIndex++;\n            return cloneElement(tab, props);\n          })\n        });\n      } else if (isTabPanel(child)) {\n        var props = {\n          id: _this2.panelIds[index],\n          tabId: _this2.tabIds[index],\n          selected: selectedIndex === index\n        };\n        if (forceRenderTabPanel) props.forceRender = forceRenderTabPanel;\n        if (selectedTabPanelClassName) props.selectedClassName = selectedTabPanelClassName;\n        index++;\n        result = cloneElement(child, props);\n      }\n\n      return result;\n    });\n  };\n  /**\n   * Determine if a node from event.target is a Tab element for the current Tabs container.\n   * If the clicked element is not a Tab, it returns false.\n   * If it finds another Tabs container between the Tab and `this`, it returns false.\n   */\n\n\n  _proto.isTabFromContainer = function isTabFromContainer(node) {\n    // return immediately if the clicked element is not a Tab.\n    if (!isTabNode(node)) {\n      return false;\n    } // Check if the first occurrence of a Tabs container is `this` one.\n\n\n    var nodeAncestor = node.parentElement;\n\n    do {\n      if (nodeAncestor === this.node) return true;\n      if (nodeAncestor.getAttribute('data-tabs')) break;\n      nodeAncestor = nodeAncestor.parentElement;\n    } while (nodeAncestor);\n\n    return false;\n  };\n\n  _proto.render = function render() {\n    var _this3 = this; // Delete all known props, so they don't get added to DOM\n\n\n    var _this$props3 = this.props,\n        children = _this$props3.children,\n        className = _this$props3.className,\n        disabledTabClassName = _this$props3.disabledTabClassName,\n        domRef = _this$props3.domRef,\n        focus = _this$props3.focus,\n        forceRenderTabPanel = _this$props3.forceRenderTabPanel,\n        onSelect = _this$props3.onSelect,\n        selectedIndex = _this$props3.selectedIndex,\n        selectedTabClassName = _this$props3.selectedTabClassName,\n        selectedTabPanelClassName = _this$props3.selectedTabPanelClassName,\n        attributes = _objectWithoutPropertiesLoose(_this$props3, [\"children\", \"className\", \"disabledTabClassName\", \"domRef\", \"focus\", \"forceRenderTabPanel\", \"onSelect\", \"selectedIndex\", \"selectedTabClassName\", \"selectedTabPanelClassName\"]);\n\n    return React.createElement(\"div\", _extends({}, attributes, {\n      className: cx(className),\n      onClick: this.handleClick,\n      onKeyDown: this.handleKeyDown,\n      ref: function ref(node) {\n        _this3.node = node;\n        if (domRef) domRef(node);\n      },\n      \"data-tabs\": true\n    }), this.getChildren());\n  };\n\n  return UncontrolledTabs;\n}(Component);\n\nUncontrolledTabs.defaultProps = {\n  className: 'react-tabs',\n  focus: false\n};\nexport { UncontrolledTabs as default };\nUncontrolledTabs.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  children: childrenPropType,\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.array, PropTypes.object]),\n  disabledTabClassName: PropTypes.string,\n  domRef: PropTypes.func,\n  focus: PropTypes.bool,\n  forceRenderTabPanel: PropTypes.bool,\n  onSelect: PropTypes.func.isRequired,\n  selectedIndex: PropTypes.number.isRequired,\n  selectedTabClassName: PropTypes.string,\n  selectedTabPanelClassName: PropTypes.string\n} : {};","map":{"version":3,"sources":["/home/bob/code/gpothier/frontend/node_modules/react-tabs/esm/components/UncontrolledTabs.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","_inheritsLoose","subClass","superClass","create","constructor","__proto__","PropTypes","React","cloneElement","Component","cx","uuid","childrenPropType","getPanelsCount","_getPanelsCount","getTabsCount","_getTabsCount","deepMap","isTabList","isTabPanel","isTab","isNode","node","isTabNode","getAttribute","isTabDisabled","canUseActiveElement","window","document","activeElement","e","UncontrolledTabs","_Component","_this","_len","args","Array","_key","concat","tabNodes","handleKeyDown","isTabFromContainer","index","props","selectedIndex","preventDefault","useSelectedIndex","keyCode","handleClick","getPrevTab","getNextTab","getLastTab","getFirstTab","setSelected","slice","parentNode","children","filter","_proto","event","_this$props","onSelect","count","getTab","_i","getChildren","_this2","_this$props2","disabledTabClassName","focus","forceRenderTabPanel","selectedTabClassName","selectedTabPanelClassName","tabIds","panelIds","diff","push","child","result","listIndex","wasTabFocused","Children","toArray","some","tab","selected","tabRef","id","panelId","selectedClassName","disabledClassName","tabId","forceRender","nodeAncestor","parentElement","render","_this3","_this$props3","className","domRef","attributes","createElement","onClick","onKeyDown","ref","defaultProps","default","propTypes","process","env","NODE_ENV","oneOfType","string","array","object","func","bool","isRequired","number"],"mappings":"AAAA,SAASA,QAAT,GAAoB;AAAEA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,UAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,WAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,YAAIN,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,UAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,WAAOL,MAAP;AAAgB,GAA5P;;AAA8P,SAAOH,QAAQ,CAACY,KAAT,CAAe,IAAf,EAAqBP,SAArB,CAAP;AAAyC;;AAE7T,SAASQ,6BAAT,CAAuCN,MAAvC,EAA+CO,QAA/C,EAAyD;AAAE,MAAIP,MAAM,IAAI,IAAd,EAAoB,OAAO,EAAP;AAAW,MAAIJ,MAAM,GAAG,EAAb;AAAiB,MAAIY,UAAU,GAAGd,MAAM,CAACe,IAAP,CAAYT,MAAZ,CAAjB;AAAsC,MAAIC,GAAJ,EAASJ,CAAT;;AAAY,OAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGW,UAAU,CAACT,MAA3B,EAAmCF,CAAC,EAApC,EAAwC;AAAEI,IAAAA,GAAG,GAAGO,UAAU,CAACX,CAAD,CAAhB;AAAqB,QAAIU,QAAQ,CAACG,OAAT,CAAiBT,GAAjB,KAAyB,CAA7B,EAAgC;AAAUL,IAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;;AAAC,SAAOL,MAAP;AAAgB;;AAEnT,SAASe,cAAT,CAAwBC,QAAxB,EAAkCC,UAAlC,EAA8C;AAAED,EAAAA,QAAQ,CAACV,SAAT,GAAqBR,MAAM,CAACoB,MAAP,CAAcD,UAAU,CAACX,SAAzB,CAArB;AAA0DU,EAAAA,QAAQ,CAACV,SAAT,CAAmBa,WAAnB,GAAiCH,QAAjC;AAA2CA,EAAAA,QAAQ,CAACI,SAAT,GAAqBH,UAArB;AAAkC;;AAEvL,OAAOI,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,YAAhB,EAA8BC,SAA9B,QAA+C,OAA/C;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AACA,SAASC,cAAc,IAAIC,eAA3B,EAA4CC,YAAY,IAAIC,aAA5D,QAAiF,kBAAjF;AACA,SAASC,OAAT,QAAwB,4BAAxB;AACA,SAASC,SAAT,EAAoBC,UAApB,EAAgCC,KAAhC,QAA6C,yBAA7C;;AAEA,SAASC,MAAT,CAAgBC,IAAhB,EAAsB;AACpB,SAAOA,IAAI,IAAI,kBAAkBA,IAAjC;AACD,C,CAAC;;;AAGF,SAASC,SAAT,CAAmBD,IAAnB,EAAyB;AACvB,SAAOD,MAAM,CAACC,IAAD,CAAN,IAAgBA,IAAI,CAACE,YAAL,CAAkB,MAAlB,MAA8B,KAArD;AACD,C,CAAC;;;AAGF,SAASC,aAAT,CAAuBH,IAAvB,EAA6B;AAC3B,SAAOD,MAAM,CAACC,IAAD,CAAN,IAAgBA,IAAI,CAACE,YAAL,CAAkB,eAAlB,MAAuC,MAA9D;AACD;;AAED,IAAIE,mBAAJ;;AAEA,IAAI;AACFA,EAAAA,mBAAmB,GAAG,CAAC,EAAE,OAAOC,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,CAACC,QAAxC,IAAoDD,MAAM,CAACC,QAAP,CAAgBC,aAAtE,CAAvB;AACD,CAFD,CAEE,OAAOC,CAAP,EAAU;AACV;AACA;AACA;AACA;AACAJ,EAAAA,mBAAmB,GAAG,KAAtB;AACD;;AAED,IAAIK,gBAAgB;AACpB;AACA,UAAUC,UAAV,EAAsB;AACpBhC,EAAAA,cAAc,CAAC+B,gBAAD,EAAmBC,UAAnB,CAAd;;AAEA,WAASD,gBAAT,GAA4B;AAC1B,QAAIE,KAAJ;;AAEA,SAAK,IAAIC,IAAI,GAAG/C,SAAS,CAACC,MAArB,EAA6B+C,IAAI,GAAG,IAAIC,KAAJ,CAAUF,IAAV,CAApC,EAAqDG,IAAI,GAAG,CAAjE,EAAoEA,IAAI,GAAGH,IAA3E,EAAiFG,IAAI,EAArF,EAAyF;AACvFF,MAAAA,IAAI,CAACE,IAAD,CAAJ,GAAalD,SAAS,CAACkD,IAAD,CAAtB;AACD;;AAEDJ,IAAAA,KAAK,GAAGD,UAAU,CAACvC,IAAX,CAAgBC,KAAhB,CAAsBsC,UAAtB,EAAkC,CAAC,IAAD,EAAOM,MAAP,CAAcH,IAAd,CAAlC,KAA0D,IAAlE;AACAF,IAAAA,KAAK,CAACM,QAAN,GAAiB,EAAjB;;AAEAN,IAAAA,KAAK,CAACO,aAAN,GAAsB,UAAUV,CAAV,EAAa;AACjC,UAAIG,KAAK,CAACQ,kBAAN,CAAyBX,CAAC,CAAC7C,MAA3B,CAAJ,EAAwC;AACtC,YAAIyD,KAAK,GAAGT,KAAK,CAACU,KAAN,CAAYC,aAAxB;AACA,YAAIC,cAAc,GAAG,KAArB;AACA,YAAIC,gBAAgB,GAAG,KAAvB;;AAEA,YAAIhB,CAAC,CAACiB,OAAF,KAAc,EAAd,IAAoBjB,CAAC,CAACiB,OAAF,KAAc,EAAtC,EAA0C;AACxCF,UAAAA,cAAc,GAAG,IAAjB;AACAC,UAAAA,gBAAgB,GAAG,KAAnB;;AAEAb,UAAAA,KAAK,CAACe,WAAN,CAAkBlB,CAAlB;AACD;;AAED,YAAIA,CAAC,CAACiB,OAAF,KAAc,EAAd,IAAoBjB,CAAC,CAACiB,OAAF,KAAc,EAAtC,EAA0C;AACxC;AACAL,UAAAA,KAAK,GAAGT,KAAK,CAACgB,UAAN,CAAiBP,KAAjB,CAAR;AACAG,UAAAA,cAAc,GAAG,IAAjB;AACAC,UAAAA,gBAAgB,GAAG,IAAnB;AACD,SALD,MAKO,IAAIhB,CAAC,CAACiB,OAAF,KAAc,EAAd,IAAoBjB,CAAC,CAACiB,OAAF,KAAc,EAAtC,EAA0C;AAC/C;AACAL,UAAAA,KAAK,GAAGT,KAAK,CAACiB,UAAN,CAAiBR,KAAjB,CAAR;AACAG,UAAAA,cAAc,GAAG,IAAjB;AACAC,UAAAA,gBAAgB,GAAG,IAAnB;AACD,SALM,MAKA,IAAIhB,CAAC,CAACiB,OAAF,KAAc,EAAlB,EAAsB;AAC3B;AACAL,UAAAA,KAAK,GAAGT,KAAK,CAACkB,UAAN,EAAR;AACAN,UAAAA,cAAc,GAAG,IAAjB;AACAC,UAAAA,gBAAgB,GAAG,IAAnB;AACD,SALM,MAKA,IAAIhB,CAAC,CAACiB,OAAF,KAAc,EAAlB,EAAsB;AAC3B;AACAL,UAAAA,KAAK,GAAGT,KAAK,CAACmB,WAAN,EAAR;AACAP,UAAAA,cAAc,GAAG,IAAjB;AACAC,UAAAA,gBAAgB,GAAG,IAAnB;AACD,SAhCqC,CAgCpC;;;AAGF,YAAID,cAAJ,EAAoB;AAClBf,UAAAA,CAAC,CAACe,cAAF;AACD,SArCqC,CAqCpC;;;AAGF,YAAIC,gBAAJ,EAAsB;AACpBb,UAAAA,KAAK,CAACoB,WAAN,CAAkBX,KAAlB,EAAyBZ,CAAzB;AACD;AACF;AACF,KA7CD;;AA+CAG,IAAAA,KAAK,CAACe,WAAN,GAAoB,UAAUlB,CAAV,EAAa;AAC/B,UAAIR,IAAI,GAAGQ,CAAC,CAAC7C,MAAb,CAD+B,CACV;;AAErB,SAAG;AACD,YAAIgD,KAAK,CAACQ,kBAAN,CAAyBnB,IAAzB,CAAJ,EAAoC;AAClC,cAAIG,aAAa,CAACH,IAAD,CAAjB,EAAyB;AACvB;AACD;;AAED,cAAIoB,KAAK,GAAG,GAAGY,KAAH,CAAS7D,IAAT,CAAc6B,IAAI,CAACiC,UAAL,CAAgBC,QAA9B,EAAwCC,MAAxC,CAA+ClC,SAA/C,EAA0DxB,OAA1D,CAAkEuB,IAAlE,CAAZ;;AAEAW,UAAAA,KAAK,CAACoB,WAAN,CAAkBX,KAAlB,EAAyBZ,CAAzB;;AAEA;AACD;AACF,OAZD,QAYS,CAACR,IAAI,GAAGA,IAAI,CAACiC,UAAb,KAA4B,IAZrC;AAaD,KAhBD;;AAkBA,WAAOtB,KAAP;AACD;;AAED,MAAIyB,MAAM,GAAG3B,gBAAgB,CAACxC,SAA9B;;AAEAmE,EAAAA,MAAM,CAACL,WAAP,GAAqB,SAASA,WAAT,CAAqBX,KAArB,EAA4BiB,KAA5B,EAAmC;AACtD;AACA,QAAIjB,KAAK,GAAG,CAAR,IAAaA,KAAK,IAAI,KAAK3B,YAAL,EAA1B,EAA+C;AAC/C,QAAI6C,WAAW,GAAG,KAAKjB,KAAvB;AAAA,QACIkB,QAAQ,GAAGD,WAAW,CAACC,QAD3B;AAAA,QAEIjB,aAAa,GAAGgB,WAAW,CAAChB,aAFhC,CAHsD,CAKP;;AAE/CiB,IAAAA,QAAQ,CAACnB,KAAD,EAAQE,aAAR,EAAuBe,KAAvB,CAAR;AACD,GARD;;AAUAD,EAAAA,MAAM,CAACR,UAAP,GAAoB,SAASA,UAAT,CAAoBR,KAApB,EAA2B;AAC7C,QAAIoB,KAAK,GAAG,KAAK/C,YAAL,EAAZ,CAD6C,CACZ;;AAEjC,SAAK,IAAI7B,CAAC,GAAGwD,KAAK,GAAG,CAArB,EAAwBxD,CAAC,GAAG4E,KAA5B,EAAmC5E,CAAC,EAApC,EAAwC;AACtC,UAAI,CAACuC,aAAa,CAAC,KAAKsC,MAAL,CAAY7E,CAAZ,CAAD,CAAlB,EAAoC;AAClC,eAAOA,CAAP;AACD;AACF,KAP4C,CAO3C;;;AAGF,SAAK,IAAI8E,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGtB,KAAtB,EAA6BsB,EAAE,EAA/B,EAAmC;AACjC,UAAI,CAACvC,aAAa,CAAC,KAAKsC,MAAL,CAAYC,EAAZ,CAAD,CAAlB,EAAqC;AACnC,eAAOA,EAAP;AACD;AACF,KAd4C,CAc3C;;;AAGF,WAAOtB,KAAP;AACD,GAlBD;;AAoBAgB,EAAAA,MAAM,CAACT,UAAP,GAAoB,SAASA,UAAT,CAAoBP,KAApB,EAA2B;AAC7C,QAAIxD,CAAC,GAAGwD,KAAR,CAD6C,CAC9B;;AAEf,WAAOxD,CAAC,EAAR,EAAY;AACV,UAAI,CAACuC,aAAa,CAAC,KAAKsC,MAAL,CAAY7E,CAAZ,CAAD,CAAlB,EAAoC;AAClC,eAAOA,CAAP;AACD;AACF,KAP4C,CAO3C;;;AAGFA,IAAAA,CAAC,GAAG,KAAK6B,YAAL,EAAJ;;AAEA,WAAO7B,CAAC,KAAKwD,KAAb,EAAoB;AAClB,UAAI,CAACjB,aAAa,CAAC,KAAKsC,MAAL,CAAY7E,CAAZ,CAAD,CAAlB,EAAoC;AAClC,eAAOA,CAAP;AACD;AACF,KAhB4C,CAgB3C;;;AAGF,WAAOwD,KAAP;AACD,GApBD;;AAsBAgB,EAAAA,MAAM,CAACN,WAAP,GAAqB,SAASA,WAAT,GAAuB;AAC1C,QAAIU,KAAK,GAAG,KAAK/C,YAAL,EAAZ,CAD0C,CACT;;AAEjC,SAAK,IAAI7B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG4E,KAApB,EAA2B5E,CAAC,EAA5B,EAAgC;AAC9B,UAAI,CAACuC,aAAa,CAAC,KAAKsC,MAAL,CAAY7E,CAAZ,CAAD,CAAlB,EAAoC;AAClC,eAAOA,CAAP;AACD;AACF;;AAED,WAAO,IAAP;AACD,GAVD;;AAYAwE,EAAAA,MAAM,CAACP,UAAP,GAAoB,SAASA,UAAT,GAAsB;AACxC,QAAIjE,CAAC,GAAG,KAAK6B,YAAL,EAAR,CADwC,CACX;;AAE7B,WAAO7B,CAAC,EAAR,EAAY;AACV,UAAI,CAACuC,aAAa,CAAC,KAAKsC,MAAL,CAAY7E,CAAZ,CAAD,CAAlB,EAAoC;AAClC,eAAOA,CAAP;AACD;AACF;;AAED,WAAO,IAAP;AACD,GAVD;;AAYAwE,EAAAA,MAAM,CAAC3C,YAAP,GAAsB,SAASA,YAAT,GAAwB;AAC5C,QAAIyC,QAAQ,GAAG,KAAKb,KAAL,CAAWa,QAA1B;AACA,WAAOxC,aAAa,CAACwC,QAAD,CAApB;AACD,GAHD;;AAKAE,EAAAA,MAAM,CAAC7C,cAAP,GAAwB,SAASA,cAAT,GAA0B;AAChD,QAAI2C,QAAQ,GAAG,KAAKb,KAAL,CAAWa,QAA1B;AACA,WAAO1C,eAAe,CAAC0C,QAAD,CAAtB;AACD,GAHD;;AAKAE,EAAAA,MAAM,CAACK,MAAP,GAAgB,SAASA,MAAT,CAAgBrB,KAAhB,EAAuB;AACrC,WAAO,KAAKH,QAAL,CAAc,UAAUG,KAAxB,CAAP;AACD,GAFD;;AAIAgB,EAAAA,MAAM,CAACO,WAAP,GAAqB,SAASA,WAAT,GAAuB;AAC1C,QAAIC,MAAM,GAAG,IAAb;;AAEA,QAAIxB,KAAK,GAAG,CAAZ;AACA,QAAIyB,YAAY,GAAG,KAAKxB,KAAxB;AAAA,QACIa,QAAQ,GAAGW,YAAY,CAACX,QAD5B;AAAA,QAEIY,oBAAoB,GAAGD,YAAY,CAACC,oBAFxC;AAAA,QAGIC,KAAK,GAAGF,YAAY,CAACE,KAHzB;AAAA,QAIIC,mBAAmB,GAAGH,YAAY,CAACG,mBAJvC;AAAA,QAKI1B,aAAa,GAAGuB,YAAY,CAACvB,aALjC;AAAA,QAMI2B,oBAAoB,GAAGJ,YAAY,CAACI,oBANxC;AAAA,QAOIC,yBAAyB,GAAGL,YAAY,CAACK,yBAP7C;AAQA,SAAKC,MAAL,GAAc,KAAKA,MAAL,IAAe,EAA7B;AACA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,IAAiB,EAAjC;AACA,QAAIC,IAAI,GAAG,KAAKF,MAAL,CAAYrF,MAAZ,GAAqB,KAAK2B,YAAL,EAAhC,CAd0C,CAcW;AACrD;AACA;;AAEA,WAAO4D,IAAI,KAAK,CAAhB,EAAmB;AACjB,WAAKF,MAAL,CAAYG,IAAZ,CAAiBjE,IAAI,EAArB;AACA,WAAK+D,QAAL,CAAcE,IAAd,CAAmBjE,IAAI,EAAvB;AACD,KArByC,CAqBxC;;;AAGF,WAAOM,OAAO,CAACuC,QAAD,EAAW,UAAUqB,KAAV,EAAiB;AACxC,UAAIC,MAAM,GAAGD,KAAb,CADwC,CACpB;;AAEpB,UAAI3D,SAAS,CAAC2D,KAAD,CAAb,EAAsB;AACpB,YAAIE,SAAS,GAAG,CAAhB,CADoB,CACD;AACnB;;AAEA,YAAIC,aAAa,GAAG,KAApB;;AAEA,YAAItD,mBAAJ,EAAyB;AACvBsD,UAAAA,aAAa,GAAGzE,KAAK,CAAC0E,QAAN,CAAeC,OAAf,CAAuBL,KAAK,CAAClC,KAAN,CAAYa,QAAnC,EAA6CC,MAA7C,CAAoDrC,KAApD,EAA2D+D,IAA3D,CAAgE,UAAUC,GAAV,EAAelG,CAAf,EAAkB;AAChG,mBAAO0C,QAAQ,CAACC,aAAT,KAA2BqC,MAAM,CAACH,MAAP,CAAc7E,CAAd,CAAlC;AACD,WAFe,CAAhB;AAGD;;AAED4F,QAAAA,MAAM,GAAGtE,YAAY,CAACqE,KAAD,EAAQ;AAC3BrB,UAAAA,QAAQ,EAAEvC,OAAO,CAAC4D,KAAK,CAAClC,KAAN,CAAYa,QAAb,EAAuB,UAAU4B,GAAV,EAAe;AACrD,gBAAI9F,GAAG,GAAG,UAAUyF,SAApB;AACA,gBAAIM,QAAQ,GAAGzC,aAAa,KAAKmC,SAAjC;AACA,gBAAIpC,KAAK,GAAG;AACV2C,cAAAA,MAAM,EAAE,SAASA,MAAT,CAAgBhE,IAAhB,EAAsB;AAC5B4C,gBAAAA,MAAM,CAAC3B,QAAP,CAAgBjD,GAAhB,IAAuBgC,IAAvB;AACD,eAHS;AAIViE,cAAAA,EAAE,EAAErB,MAAM,CAACO,MAAP,CAAcM,SAAd,CAJM;AAKVS,cAAAA,OAAO,EAAEtB,MAAM,CAACQ,QAAP,CAAgBK,SAAhB,CALC;AAMVM,cAAAA,QAAQ,EAAEA,QANA;AAOVhB,cAAAA,KAAK,EAAEgB,QAAQ,KAAKhB,KAAK,IAAIW,aAAd;AAPL,aAAZ;AASA,gBAAIT,oBAAJ,EAA0B5B,KAAK,CAAC8C,iBAAN,GAA0BlB,oBAA1B;AAC1B,gBAAIH,oBAAJ,EAA0BzB,KAAK,CAAC+C,iBAAN,GAA0BtB,oBAA1B;AAC1BW,YAAAA,SAAS;AACT,mBAAOvE,YAAY,CAAC4E,GAAD,EAAMzC,KAAN,CAAnB;AACD,WAhBgB;AADU,SAAR,CAArB;AAmBD,OA/BD,MA+BO,IAAIxB,UAAU,CAAC0D,KAAD,CAAd,EAAuB;AAC5B,YAAIlC,KAAK,GAAG;AACV4C,UAAAA,EAAE,EAAErB,MAAM,CAACQ,QAAP,CAAgBhC,KAAhB,CADM;AAEViD,UAAAA,KAAK,EAAEzB,MAAM,CAACO,MAAP,CAAc/B,KAAd,CAFG;AAGV2C,UAAAA,QAAQ,EAAEzC,aAAa,KAAKF;AAHlB,SAAZ;AAKA,YAAI4B,mBAAJ,EAAyB3B,KAAK,CAACiD,WAAN,GAAoBtB,mBAApB;AACzB,YAAIE,yBAAJ,EAA+B7B,KAAK,CAAC8C,iBAAN,GAA0BjB,yBAA1B;AAC/B9B,QAAAA,KAAK;AACLoC,QAAAA,MAAM,GAAGtE,YAAY,CAACqE,KAAD,EAAQlC,KAAR,CAArB;AACD;;AAED,aAAOmC,MAAP;AACD,KA/Ca,CAAd;AAgDD,GAxED;AA0EA;;;;;;;AAKApB,EAAAA,MAAM,CAACjB,kBAAP,GAA4B,SAASA,kBAAT,CAA4BnB,IAA5B,EAAkC;AAC5D;AACA,QAAI,CAACC,SAAS,CAACD,IAAD,CAAd,EAAsB;AACpB,aAAO,KAAP;AACD,KAJ2D,CAI1D;;;AAGF,QAAIuE,YAAY,GAAGvE,IAAI,CAACwE,aAAxB;;AAEA,OAAG;AACD,UAAID,YAAY,KAAK,KAAKvE,IAA1B,EAAgC,OAAO,IAAP;AAChC,UAAIuE,YAAY,CAACrE,YAAb,CAA0B,WAA1B,CAAJ,EAA4C;AAC5CqE,MAAAA,YAAY,GAAGA,YAAY,CAACC,aAA5B;AACD,KAJD,QAISD,YAJT;;AAMA,WAAO,KAAP;AACD,GAhBD;;AAkBAnC,EAAAA,MAAM,CAACqC,MAAP,GAAgB,SAASA,MAAT,GAAkB;AAChC,QAAIC,MAAM,GAAG,IAAb,CADgC,CAGhC;;;AACA,QAAIC,YAAY,GAAG,KAAKtD,KAAxB;AAAA,QACIa,QAAQ,GAAGyC,YAAY,CAACzC,QAD5B;AAAA,QAEI0C,SAAS,GAAGD,YAAY,CAACC,SAF7B;AAAA,QAGI9B,oBAAoB,GAAG6B,YAAY,CAAC7B,oBAHxC;AAAA,QAII+B,MAAM,GAAGF,YAAY,CAACE,MAJ1B;AAAA,QAKI9B,KAAK,GAAG4B,YAAY,CAAC5B,KALzB;AAAA,QAMIC,mBAAmB,GAAG2B,YAAY,CAAC3B,mBANvC;AAAA,QAOIT,QAAQ,GAAGoC,YAAY,CAACpC,QAP5B;AAAA,QAQIjB,aAAa,GAAGqD,YAAY,CAACrD,aARjC;AAAA,QASI2B,oBAAoB,GAAG0B,YAAY,CAAC1B,oBATxC;AAAA,QAUIC,yBAAyB,GAAGyB,YAAY,CAACzB,yBAV7C;AAAA,QAWI4B,UAAU,GAAGzG,6BAA6B,CAACsG,YAAD,EAAe,CAAC,UAAD,EAAa,WAAb,EAA0B,sBAA1B,EAAkD,QAAlD,EAA4D,OAA5D,EAAqE,qBAArE,EAA4F,UAA5F,EAAwG,eAAxG,EAAyH,sBAAzH,EAAiJ,2BAAjJ,CAAf,CAX9C;;AAaA,WAAO1F,KAAK,CAAC8F,aAAN,CAAoB,KAApB,EAA2BvH,QAAQ,CAAC,EAAD,EAAKsH,UAAL,EAAiB;AACzDF,MAAAA,SAAS,EAAExF,EAAE,CAACwF,SAAD,CAD4C;AAEzDI,MAAAA,OAAO,EAAE,KAAKtD,WAF2C;AAGzDuD,MAAAA,SAAS,EAAE,KAAK/D,aAHyC;AAIzDgE,MAAAA,GAAG,EAAE,SAASA,GAAT,CAAalF,IAAb,EAAmB;AACtB0E,QAAAA,MAAM,CAAC1E,IAAP,GAAcA,IAAd;AACA,YAAI6E,MAAJ,EAAYA,MAAM,CAAC7E,IAAD,CAAN;AACb,OAPwD;AAQzD,mBAAa;AAR4C,KAAjB,CAAnC,EASH,KAAK2C,WAAL,EATG,CAAP;AAUD,GA3BD;;AA6BA,SAAOlC,gBAAP;AACD,CA5SD,CA4SEtB,SA5SF,CAFA;;AAgTAsB,gBAAgB,CAAC0E,YAAjB,GAAgC;AAC9BP,EAAAA,SAAS,EAAE,YADmB;AAE9B7B,EAAAA,KAAK,EAAE;AAFuB,CAAhC;AAIA,SAAStC,gBAAgB,IAAI2E,OAA7B;AACA3E,gBAAgB,CAAC4E,SAAjB,GAA6BC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AACnEtD,EAAAA,QAAQ,EAAE5C,gBADyD;AAEnEsF,EAAAA,SAAS,EAAE5F,SAAS,CAACyG,SAAV,CAAoB,CAACzG,SAAS,CAAC0G,MAAX,EAAmB1G,SAAS,CAAC2G,KAA7B,EAAoC3G,SAAS,CAAC4G,MAA9C,CAApB,CAFwD;AAGnE9C,EAAAA,oBAAoB,EAAE9D,SAAS,CAAC0G,MAHmC;AAInEb,EAAAA,MAAM,EAAE7F,SAAS,CAAC6G,IAJiD;AAKnE9C,EAAAA,KAAK,EAAE/D,SAAS,CAAC8G,IALkD;AAMnE9C,EAAAA,mBAAmB,EAAEhE,SAAS,CAAC8G,IANoC;AAOnEvD,EAAAA,QAAQ,EAAEvD,SAAS,CAAC6G,IAAV,CAAeE,UAP0C;AAQnEzE,EAAAA,aAAa,EAAEtC,SAAS,CAACgH,MAAV,CAAiBD,UARmC;AASnE9C,EAAAA,oBAAoB,EAAEjE,SAAS,CAAC0G,MATmC;AAUnExC,EAAAA,yBAAyB,EAAElE,SAAS,CAAC0G;AAV8B,CAAxC,GAWzB,EAXJ","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nimport PropTypes from 'prop-types';\nimport React, { cloneElement, Component } from 'react';\nimport cx from 'classnames';\nimport uuid from '../helpers/uuid';\nimport { childrenPropType } from '../helpers/propTypes';\nimport { getPanelsCount as _getPanelsCount, getTabsCount as _getTabsCount } from '../helpers/count';\nimport { deepMap } from '../helpers/childrenDeepMap';\nimport { isTabList, isTabPanel, isTab } from '../helpers/elementTypes';\n\nfunction isNode(node) {\n  return node && 'getAttribute' in node;\n} // Determine if a node from event.target is a Tab element\n\n\nfunction isTabNode(node) {\n  return isNode(node) && node.getAttribute('role') === 'tab';\n} // Determine if a tab node is disabled\n\n\nfunction isTabDisabled(node) {\n  return isNode(node) && node.getAttribute('aria-disabled') === 'true';\n}\n\nvar canUseActiveElement;\n\ntry {\n  canUseActiveElement = !!(typeof window !== 'undefined' && window.document && window.document.activeElement);\n} catch (e) {\n  // Work around for IE bug when accessing document.activeElement in an iframe\n  // Refer to the following resources:\n  // http://stackoverflow.com/a/10982960/369687\n  // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/12733599\n  canUseActiveElement = false;\n}\n\nvar UncontrolledTabs =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(UncontrolledTabs, _Component);\n\n  function UncontrolledTabs() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this.tabNodes = [];\n\n    _this.handleKeyDown = function (e) {\n      if (_this.isTabFromContainer(e.target)) {\n        var index = _this.props.selectedIndex;\n        var preventDefault = false;\n        var useSelectedIndex = false;\n\n        if (e.keyCode === 32 || e.keyCode === 13) {\n          preventDefault = true;\n          useSelectedIndex = false;\n\n          _this.handleClick(e);\n        }\n\n        if (e.keyCode === 37 || e.keyCode === 38) {\n          // Select next tab to the left\n          index = _this.getPrevTab(index);\n          preventDefault = true;\n          useSelectedIndex = true;\n        } else if (e.keyCode === 39 || e.keyCode === 40) {\n          // Select next tab to the right\n          index = _this.getNextTab(index);\n          preventDefault = true;\n          useSelectedIndex = true;\n        } else if (e.keyCode === 35) {\n          // Select last tab (End key)\n          index = _this.getLastTab();\n          preventDefault = true;\n          useSelectedIndex = true;\n        } else if (e.keyCode === 36) {\n          // Select first tab (Home key)\n          index = _this.getFirstTab();\n          preventDefault = true;\n          useSelectedIndex = true;\n        } // This prevents scrollbars from moving around\n\n\n        if (preventDefault) {\n          e.preventDefault();\n        } // Only use the selected index in the state if we're not using the tabbed index\n\n\n        if (useSelectedIndex) {\n          _this.setSelected(index, e);\n        }\n      }\n    };\n\n    _this.handleClick = function (e) {\n      var node = e.target; // eslint-disable-next-line no-cond-assign\n\n      do {\n        if (_this.isTabFromContainer(node)) {\n          if (isTabDisabled(node)) {\n            return;\n          }\n\n          var index = [].slice.call(node.parentNode.children).filter(isTabNode).indexOf(node);\n\n          _this.setSelected(index, e);\n\n          return;\n        }\n      } while ((node = node.parentNode) != null);\n    };\n\n    return _this;\n  }\n\n  var _proto = UncontrolledTabs.prototype;\n\n  _proto.setSelected = function setSelected(index, event) {\n    // Check index boundary\n    if (index < 0 || index >= this.getTabsCount()) return;\n    var _this$props = this.props,\n        onSelect = _this$props.onSelect,\n        selectedIndex = _this$props.selectedIndex; // Call change event handler\n\n    onSelect(index, selectedIndex, event);\n  };\n\n  _proto.getNextTab = function getNextTab(index) {\n    var count = this.getTabsCount(); // Look for non-disabled tab from index to the last tab on the right\n\n    for (var i = index + 1; i < count; i++) {\n      if (!isTabDisabled(this.getTab(i))) {\n        return i;\n      }\n    } // If no tab found, continue searching from first on left to index\n\n\n    for (var _i = 0; _i < index; _i++) {\n      if (!isTabDisabled(this.getTab(_i))) {\n        return _i;\n      }\n    } // No tabs are disabled, return index\n\n\n    return index;\n  };\n\n  _proto.getPrevTab = function getPrevTab(index) {\n    var i = index; // Look for non-disabled tab from index to first tab on the left\n\n    while (i--) {\n      if (!isTabDisabled(this.getTab(i))) {\n        return i;\n      }\n    } // If no tab found, continue searching from last tab on right to index\n\n\n    i = this.getTabsCount();\n\n    while (i-- > index) {\n      if (!isTabDisabled(this.getTab(i))) {\n        return i;\n      }\n    } // No tabs are disabled, return index\n\n\n    return index;\n  };\n\n  _proto.getFirstTab = function getFirstTab() {\n    var count = this.getTabsCount(); // Look for non disabled tab from the first tab\n\n    for (var i = 0; i < count; i++) {\n      if (!isTabDisabled(this.getTab(i))) {\n        return i;\n      }\n    }\n\n    return null;\n  };\n\n  _proto.getLastTab = function getLastTab() {\n    var i = this.getTabsCount(); // Look for non disabled tab from the last tab\n\n    while (i--) {\n      if (!isTabDisabled(this.getTab(i))) {\n        return i;\n      }\n    }\n\n    return null;\n  };\n\n  _proto.getTabsCount = function getTabsCount() {\n    var children = this.props.children;\n    return _getTabsCount(children);\n  };\n\n  _proto.getPanelsCount = function getPanelsCount() {\n    var children = this.props.children;\n    return _getPanelsCount(children);\n  };\n\n  _proto.getTab = function getTab(index) {\n    return this.tabNodes[\"tabs-\" + index];\n  };\n\n  _proto.getChildren = function getChildren() {\n    var _this2 = this;\n\n    var index = 0;\n    var _this$props2 = this.props,\n        children = _this$props2.children,\n        disabledTabClassName = _this$props2.disabledTabClassName,\n        focus = _this$props2.focus,\n        forceRenderTabPanel = _this$props2.forceRenderTabPanel,\n        selectedIndex = _this$props2.selectedIndex,\n        selectedTabClassName = _this$props2.selectedTabClassName,\n        selectedTabPanelClassName = _this$props2.selectedTabPanelClassName;\n    this.tabIds = this.tabIds || [];\n    this.panelIds = this.panelIds || [];\n    var diff = this.tabIds.length - this.getTabsCount(); // Add ids if new tabs have been added\n    // Don't bother removing ids, just keep them in case they are added again\n    // This is more efficient, and keeps the uuid counter under control\n\n    while (diff++ < 0) {\n      this.tabIds.push(uuid());\n      this.panelIds.push(uuid());\n    } // Map children to dynamically setup refs\n\n\n    return deepMap(children, function (child) {\n      var result = child; // Clone TabList and Tab components to have refs\n\n      if (isTabList(child)) {\n        var listIndex = 0; // Figure out if the current focus in the DOM is set on a Tab\n        // If it is we should keep the focus on the next selected tab\n\n        var wasTabFocused = false;\n\n        if (canUseActiveElement) {\n          wasTabFocused = React.Children.toArray(child.props.children).filter(isTab).some(function (tab, i) {\n            return document.activeElement === _this2.getTab(i);\n          });\n        }\n\n        result = cloneElement(child, {\n          children: deepMap(child.props.children, function (tab) {\n            var key = \"tabs-\" + listIndex;\n            var selected = selectedIndex === listIndex;\n            var props = {\n              tabRef: function tabRef(node) {\n                _this2.tabNodes[key] = node;\n              },\n              id: _this2.tabIds[listIndex],\n              panelId: _this2.panelIds[listIndex],\n              selected: selected,\n              focus: selected && (focus || wasTabFocused)\n            };\n            if (selectedTabClassName) props.selectedClassName = selectedTabClassName;\n            if (disabledTabClassName) props.disabledClassName = disabledTabClassName;\n            listIndex++;\n            return cloneElement(tab, props);\n          })\n        });\n      } else if (isTabPanel(child)) {\n        var props = {\n          id: _this2.panelIds[index],\n          tabId: _this2.tabIds[index],\n          selected: selectedIndex === index\n        };\n        if (forceRenderTabPanel) props.forceRender = forceRenderTabPanel;\n        if (selectedTabPanelClassName) props.selectedClassName = selectedTabPanelClassName;\n        index++;\n        result = cloneElement(child, props);\n      }\n\n      return result;\n    });\n  };\n\n  /**\n   * Determine if a node from event.target is a Tab element for the current Tabs container.\n   * If the clicked element is not a Tab, it returns false.\n   * If it finds another Tabs container between the Tab and `this`, it returns false.\n   */\n  _proto.isTabFromContainer = function isTabFromContainer(node) {\n    // return immediately if the clicked element is not a Tab.\n    if (!isTabNode(node)) {\n      return false;\n    } // Check if the first occurrence of a Tabs container is `this` one.\n\n\n    var nodeAncestor = node.parentElement;\n\n    do {\n      if (nodeAncestor === this.node) return true;\n      if (nodeAncestor.getAttribute('data-tabs')) break;\n      nodeAncestor = nodeAncestor.parentElement;\n    } while (nodeAncestor);\n\n    return false;\n  };\n\n  _proto.render = function render() {\n    var _this3 = this;\n\n    // Delete all known props, so they don't get added to DOM\n    var _this$props3 = this.props,\n        children = _this$props3.children,\n        className = _this$props3.className,\n        disabledTabClassName = _this$props3.disabledTabClassName,\n        domRef = _this$props3.domRef,\n        focus = _this$props3.focus,\n        forceRenderTabPanel = _this$props3.forceRenderTabPanel,\n        onSelect = _this$props3.onSelect,\n        selectedIndex = _this$props3.selectedIndex,\n        selectedTabClassName = _this$props3.selectedTabClassName,\n        selectedTabPanelClassName = _this$props3.selectedTabPanelClassName,\n        attributes = _objectWithoutPropertiesLoose(_this$props3, [\"children\", \"className\", \"disabledTabClassName\", \"domRef\", \"focus\", \"forceRenderTabPanel\", \"onSelect\", \"selectedIndex\", \"selectedTabClassName\", \"selectedTabPanelClassName\"]);\n\n    return React.createElement(\"div\", _extends({}, attributes, {\n      className: cx(className),\n      onClick: this.handleClick,\n      onKeyDown: this.handleKeyDown,\n      ref: function ref(node) {\n        _this3.node = node;\n        if (domRef) domRef(node);\n      },\n      \"data-tabs\": true\n    }), this.getChildren());\n  };\n\n  return UncontrolledTabs;\n}(Component);\n\nUncontrolledTabs.defaultProps = {\n  className: 'react-tabs',\n  focus: false\n};\nexport { UncontrolledTabs as default };\nUncontrolledTabs.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  children: childrenPropType,\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.array, PropTypes.object]),\n  disabledTabClassName: PropTypes.string,\n  domRef: PropTypes.func,\n  focus: PropTypes.bool,\n  forceRenderTabPanel: PropTypes.bool,\n  onSelect: PropTypes.func.isRequired,\n  selectedIndex: PropTypes.number.isRequired,\n  selectedTabClassName: PropTypes.string,\n  selectedTabPanelClassName: PropTypes.string\n} : {};"]},"metadata":{},"sourceType":"module"}