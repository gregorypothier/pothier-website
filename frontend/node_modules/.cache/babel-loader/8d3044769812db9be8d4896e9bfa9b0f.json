{"ast":null,"code":"function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { Children, cloneElement } from 'react';\nimport { isTabPanel, isTab, isTabList } from './elementTypes';\n\nfunction isTabChild(child) {\n  return isTab(child) || isTabList(child) || isTabPanel(child);\n}\n\nexport function deepMap(children, callback) {\n  return Children.map(children, function (child) {\n    // null happens when conditionally rendering TabPanel/Tab\n    // see https://github.com/reactjs/react-tabs/issues/37\n    if (child === null) return null;\n\n    if (isTabChild(child)) {\n      return callback(child);\n    }\n\n    if (child.props && child.props.children && typeof child.props.children === 'object') {\n      // Clone the child that has children and map them too\n      return cloneElement(child, _objectSpread({}, child.props, {\n        children: deepMap(child.props.children, callback)\n      }));\n    }\n\n    return child;\n  });\n}\nexport function deepForEach(children, callback) {\n  return Children.forEach(children, function (child) {\n    // null happens when conditionally rendering TabPanel/Tab\n    // see https://github.com/reactjs/react-tabs/issues/37\n    if (child === null) return;\n\n    if (isTab(child) || isTabPanel(child)) {\n      callback(child);\n    } else if (child.props && child.props.children && typeof child.props.children === 'object') {\n      if (isTabList(child)) callback(child);\n      deepForEach(child.props.children, callback);\n    }\n  });\n}","map":{"version":3,"sources":["/home/bob/code/gpothier/frontend/node_modules/react-tabs/esm/helpers/childrenDeepMap.js"],"names":["_objectSpread","target","i","arguments","length","source","ownKeys","Object","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","_defineProperty","obj","value","defineProperty","configurable","writable","Children","cloneElement","isTabPanel","isTab","isTabList","isTabChild","child","deepMap","children","callback","map","props","deepForEach"],"mappings":"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","sourcesContent":["function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Children, cloneElement } from 'react';\nimport { isTabPanel, isTab, isTabList } from './elementTypes';\n\nfunction isTabChild(child) {\n  return isTab(child) || isTabList(child) || isTabPanel(child);\n}\n\nexport function deepMap(children, callback) {\n  return Children.map(children, function (child) {\n    // null happens when conditionally rendering TabPanel/Tab\n    // see https://github.com/reactjs/react-tabs/issues/37\n    if (child === null) return null;\n\n    if (isTabChild(child)) {\n      return callback(child);\n    }\n\n    if (child.props && child.props.children && typeof child.props.children === 'object') {\n      // Clone the child that has children and map them too\n      return cloneElement(child, _objectSpread({}, child.props, {\n        children: deepMap(child.props.children, callback)\n      }));\n    }\n\n    return child;\n  });\n}\nexport function deepForEach(children, callback) {\n  return Children.forEach(children, function (child) {\n    // null happens when conditionally rendering TabPanel/Tab\n    // see https://github.com/reactjs/react-tabs/issues/37\n    if (child === null) return;\n\n    if (isTab(child) || isTabPanel(child)) {\n      callback(child);\n    } else if (child.props && child.props.children && typeof child.props.children === 'object') {\n      if (isTabList(child)) callback(child);\n      deepForEach(child.props.children, callback);\n    }\n  });\n}"]},"metadata":{},"sourceType":"module"}